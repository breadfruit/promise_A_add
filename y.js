const mypromise = require('./mypromise')const p1 = new mypromise((res,rej)=>{    // setTimeout(() => {    //     res('success')    // },1000)    //res('success1')    throw 'errorrrrr'    // res('success2')    // res('success3')    // res('success4')})// 这个时候将promise定义一个p1，然后返回的时候返回p1这个promisep1.then(value => {    console.log(value)    console.log(1)    return mypromise.resolve('bushi')    // return mypromise.resolve(new mypromise((res,rej)=>{    //     res('ddddddd')    // }))},e=>{    console.log(8)}).then(v=>{    console.log(3)    console.log(v)},r=>{    console.log(5)    console.log(r)})const res = mypromise.catch('error')console.log(res)// p1.then(//     r=> {//         console.log(2)//         console.log(r)//     },//     v =>{////         console.log(v)//     })// p1.then(//     r=> {//         console.log(3)//         console.log(r)//     },//     v =>{//         console.log(v)//     })// const s1 = new Promise((res,rej) => {//     setTimeout(()=>{//         res('s1')//     },1000)// })// s1.then(v=>{//     console.log(v)//     return new Promise((res,rej)=>{//         res('s2')//     })// } ).then(v=>{//     console.log(v)//     console.log('s3')// })